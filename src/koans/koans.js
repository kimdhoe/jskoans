/**
 * This file was auto-generated by makeKoans.js script.
 */
module.exports = [{"category":"assert","meditations":[{"description":["참과 거짓에 대해 고민해봅시다.","우리는 assert를 이용해서 값들의 진실성을 검사해볼 것입니다."],"code":[{"hasInputField":true,"text":"assert.isTrue(___false___)  // 참인 값만 테스트를 통과합니다."}]},{"description":["적절한 테스트 문구가 여러분을 이끌어줄 수 있습니다."],"code":[{"hasInputField":true,"text":"assert.isFalse(_____, '거짓이어야 합니다')"}]},{"description":["현실을 이해하려면 실재와 우리의 기대를 비교해보아야만 합니다."],"code":[{"hasInputField":false,"text":"const actual = 1 + 1"},{"hasInputField":true,"text":"const expected = _____"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"assert.equal(actual, expected)"}]}]},{"category":"array","meditations":[{"description":["Array는 꺽쇠 괄호로 만들 수 있습니다.","- [], [ 0, 1, 2 ]"],"code":[{"hasInputField":true,"text":"assert.isArray(_____)"}]},{"description":["원소의 위치를 알고 있으면 한번에 값을 가져올 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [1, 3, 5]"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"assert.equal(array[0], 1)"},{"hasInputField":true,"text":"assert.equal(array[1], _____)"},{"hasInputField":false,"text":"assert.equal(array[2], 5)"}]},{"description":["원소의 개수를 비용 없이 알 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [1, 2, 3, 4, 5]"},{"hasInputField":false,"text":""},{"hasInputField":true,"text":"assert.equal(array.length, _____)"}]},{"description":["array의 일부를 복제할 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [1, 2, 3, 4, 5]"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"assert.deepEqual("},{"hasInputField":true,"text":"    array.slice(1 , _____),"},{"hasInputField":false,"text":"    [ 2, 3, 4 ]"},{"hasInputField":false,"text":")"}]},{"description":["원소를 추가한 새로운 array를 만들 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [1, 2]"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"assert.deepEqual("},{"hasInputField":false,"text":"    [0, ...array],"},{"hasInputField":true,"text":"    _____"},{"hasInputField":false,"text":")"}]},{"description":["만들어진 array에 값을 넣을 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [3, 5]"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"array.push(8)"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"assert.deepEqual("},{"hasInputField":false,"text":"    array,"},{"hasInputField":true,"text":"    _____,"},{"hasInputField":false,"text":"    '새 값이 array의 마지막 원소가 됩니다'"},{"hasInputField":false,"text":")"}]},{"description":["만들어진 array에서 값을 꺼낼 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [3, 5]"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"const x = array.pop()"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"assert.strictEqual(x, 5, '마지막 원소를 가져옵니다')"},{"hasInputField":false,"text":""},{"hasInputField":true,"text":"assert.deepEqual(array, _____)"}]}]},{"category":"truthiness","meditations":[{"description":["0을 제외한 모든 수는 참으로 칩니다."],"code":[{"hasInputField":false,"text":"const trueOrFalse = -7 ? true : false"},{"hasInputField":false,"text":""},{"hasInputField":true,"text":"assert.equal(trueOrFalse, _____)"}]},{"description":["0은 거짓으로 칩니다."],"code":[{"hasInputField":false,"text":"const trueOrFalse = 0 ? true : false"},{"hasInputField":false,"text":""},{"hasInputField":true,"text":"assert.equal(trueOrFalse, _____)"}]},{"description":["빈 문자열은 거짓으로 칩니다."],"code":[]},{"description":["null은 거짓으로 칩니다."],"code":[]},{"description":["undefined는 거짓으로 칩니다."],"code":[]},{"description":["NaN은 거짓으로 칩니다."],"code":[]}]},{"category":"equality","meditations":[{"description":["두 수가 같은지 확인할 수 있습니다."],"code":[{"hasInputField":true,"text":"assert.isTrue(_____ === 4)"}]},{"description":["두 문자열이 같은지 확인할 수 있습니다."],"code":[{"hasInputField":true,"text":"assert.isTrue(_____ === 'js')"}]},{"description":["두 객체가 똑같이 닮았다 해도 같은 객체일 수는 없습니다."],"code":[{"hasInputField":false,"text":"const object = { x: 0 }"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"assert.isFalse({ x: 0 } === object)"},{"hasInputField":false,"text":""},{"hasInputField":false,"text":"assert.isTrue("},{"hasInputField":true,"text":"    ___{ x: 0 }___ === object,"},{"hasInputField":false,"text":"    '객체는 그 자신과만 같을 수 있습니다.'"},{"hasInputField":false,"text":")"}]},{"description":["하지만 많은 경우, 두 객체가 똑같이 닮았다면 그걸로 충분합니다."],"code":[{"hasInputField":true,"text":"assert.deepEqual(_____, { x: 0 })"}]}]}]