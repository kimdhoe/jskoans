/**
 * This file was auto-generated by makeKoans.js script.
 */
module.exports = [{"category":"assert","meditations":[{"description":["참과 거짓에 대해 고민해봅시다.","우리는 assert를 이용해서 값들의 진실성을 검사해볼 것입니다."],"code":[{"hasInputField":true,"text":"assert(_____, '참된 값이어야 합니다')"}]},{"description":["적절한 테스트 문구가 여러분을 이끌어줄 수 있습니다."],"code":[{"hasInputField":true,"text":"assert.notOk(_____, '거짓인 값들은 false, 0, \"\", null, undefined 등입니다')"}]},{"description":["현실을 이해하려면 실재와 우리의 기대를 비교해보아야만 합니다."],"code":[{"hasInputField":false,"text":"assert.strictEqual("},{"hasInputField":false,"text":"    1 + 1,"},{"hasInputField":true,"text":"    _____,"},{"hasInputField":false,"text":"    '1 + 1 = ?'"},{"hasInputField":false,"text":")"}]}]},{"category":"array","meditations":[{"description":["Array는 꺽쇠 괄호[]로 만들 수 있습니다."],"code":[{"hasInputField":true,"text":"assert.isArray(_____)"}]},{"description":["원소의 위치를 알고 있으면 한번에 값을 가져올 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [1, 3, 5]"},{"hasInputField":true,"text":"assert.strictEqual(array[2], _____)"}]},{"description":["원소의 개수를 비용 없이 알 수 있습니다."],"code":[{"hasInputField":true,"text":"assert.equal([1, 2, 3, 4, 5].length, _____)"}]},{"description":["array의 일부를 복제할 수 있습니다."],"code":[{"hasInputField":false,"text":"assert.deepEqual("},{"hasInputField":false,"text":"  [10, 11, 12, 13, 14].slice(1, 4),"},{"hasInputField":true,"text":"  _____"},{"hasInputField":false,"text":")"}]},{"description":["원소를 추가한 새로운 array를 만들 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [1, 2]"},{"hasInputField":true,"text":"assert.deepEqual([0, ...array], _____)"},{"hasInputField":false,"text":"assert.deepEqual(array, [1, 2])"}]},{"description":["만들어진 array에 값을 더할 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [3, 5]"},{"hasInputField":false,"text":"array.push(8)"},{"hasInputField":false,"text":"assert.deepEqual("},{"hasInputField":false,"text":"    array,"},{"hasInputField":true,"text":"    _____,"},{"hasInputField":false,"text":"    '새 값이 array의 마지막 원소가 됩니다'"},{"hasInputField":false,"text":")"}]},{"description":["만들어진 array에서 값을 빼낼 수 있습니다."],"code":[{"hasInputField":false,"text":"const array = [3, 5]"},{"hasInputField":false,"text":"const x = array.pop()"},{"hasInputField":false,"text":"assert.strictEqual(x, 5, '마지막 원소를 가져옵니다')"},{"hasInputField":true,"text":"assert.deepEqual(array, _____)"}]}]}]